<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Dragon Medical Virtual Assistant" data-mc-conditions="Danube.Florence">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>Dialog workflow</title>
        <link href="../Resources/Stylesheets/DocLoc.css" rel="stylesheet" type="text/css" />
        <script src="../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <h1><a name="kanchor9"></a>Dialog workflow</h1>
        <h2>Prerequisites</h2>
        <p>To start a dialog with <span class="mc-variable DocLoc.DMVA_Full variable">Dragon Medical Virtual Assistant</span>, the user says the <a href="../Concepts/DANUBE_MODES.htm#Assistant">VA&#160;trigger phrase</a>. The app switches from <a href="../Concepts/DANUBE_MODES.htm">standby mode</a> to assistant mode.</p>
        <p>
            <img src="../Resources/DMVA_iOSworkflow.png" alt="" />
        </p>
        <h2>Example workflow</h2>
        <p>The following steps are performed on the <span class="mc-variable DocLoc.DMVA_Short variable">DMVA</span> API:</p>
        <ol>
            <li value="1"><span class="mc-variable DocLoc.DMVA_Short variable">DMVA</span> mode is enabled.</li>
            <li value="2">
                <p>The <code>NUSAVirtualAssistantControllerDelegate</code>, <code>dialogResult</code> method is invoked each time new information on the dialog has been received. For example, the state of the dialog has changed (to <code>active</code>, <code>finished</code>, or <code>aborted</code>) or additional entity values have been collected.</p>
            </li>
            <li value="3">
                <p>You call <code>stopDialog</code> or the user says <span class="command">Cancel</span>; the current dialog is canceled.</p>
            </li>
        </ol>
        <p class="note"><b>Note:</b> If the user starts a new dialog before finishing the current dialog, the current dialog is canceled.</p>
        <h2>Example dialog results</h2>
        <p>Dialog results are in the following JSON format:</p>
        <p><pre class="example">
{
    "actions": [
        {
            "taskId": "&lt;ID&gt;" | null, /*the task that this action is associated with, if there is one*/
            "key": "&lt;decision key&gt;", /*the name of the prompt in the grammar*/
            "facets": [
                { "name": "&lt;facet name 1&gt;", "value": "&lt;facet value 1&gt;" }, 
                { "name": "&lt;facet name 2&gt;", "value": "&lt;facet value 2&gt;" } 
            ]
        }
    ],
    "tasks": [
        {
            "id": "&lt;ID&gt;",
            "intent": "&lt;intent name&gt;",  
            "state": "active" | "finished" | "aborted",
            "concepts": [
                {
                    "name": "&lt;Concept Name 1&gt;",
                    "values": [
                        { "literal": "&lt;literal name 1&gt;", "value": "&lt;value 1&gt;"}, 
                        { "literal": "&lt;literal name 2&gt;", "value": "&lt;value 2&gt;"}, 
                        { "literal": "&lt;literal name 3&gt;", "value": "&lt;value 3&gt;"}
                    ],
                    "concepts": [
                        {
                            "name": "&lt;Concept Name 1A&gt;",
                            "values": [
                                { "literal": "&lt;literal name 1A&gt;", "value": "&lt;value 1A&gt;"}, 
                                { "literal": "&lt;literal name 2A&gt;", "value": "&lt;value 2A&gt;"}, 
                                { "literal": "&lt;literal name 3A&gt;", "value": "&lt;value 3A&gt;"}
                            ],
                            "concepts": [
                                ...
                            ]
                        },
                        {
                            "name": "&lt;Concept Name 2A&gt;",
                            "values": [
                                { "literal": "&lt;literal name 4A&gt;", "value": "&lt;value 4A&gt;"},  
                                { "literal": "&lt;literal name 5A&gt;", "value": "&lt;value 5A&gt;"},  
                                { "literal": "&lt;literal name 6A&gt;", "value": "&lt;value 6A&gt;"}
                            ],
                            "concepts": [
                                ...
                            ]
                        }
                    ]
                },
                {
                    "name": "&lt;Concept Name 2&gt;",
                    "values": [
                        { "literal": "&lt;literal name 4&gt;", "value": "&lt;value 4&gt;"},
                        { "literal": "&lt;literal name 5&gt;", "value": "&lt;value 5&gt;"},
                        { "literal": "&lt;literal name 6&gt;", "value": "&lt;value 6&gt;"}
                    ],
                    "concepts": [
                        {
                            "name": "&lt;Concept Name 1B&gt;",
                            "values": [
                                { "literal": "&lt;literal name 1B&gt;", "value": "&lt;value 1B&gt;"},
                                { "literal": "&lt;literal name 2B&gt;", "value": "&lt;value 2B&gt;"},
                                { "literal": "&lt;literal name 3B&gt;", "value": "&lt;value 3B&gt;"}
                            ],
                            "concepts": [
                                ...
                            ]
                        },
                        {
                            "name": "&lt;Concept Name 2B&gt;",
                            "values": [
                                { "literal": "&lt;literal name 4B&gt;", "value": "&lt;value 4B&gt;"},
                                { "literal": "&lt;literal name 5B&gt;", "value": "&lt;value 5B&gt;"},
                                { "literal": "&lt;literal name 6B&gt;", "value": "&lt;value 6B&gt;"}
                            ],
                            "concepts": [
                                ...
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    "literal": "&lt;literal string value&gt;" /*what the user said*/
    "nluSessionId": "&lt;ID of the natural language understanding (NLU) session&gt;"
}</pre>
        </p>
        <p>For example, the user says <span class="command">remind me to check the patient's vitals</span>. The dialog result is the following:</p>
        <p><pre class="example">
{  
    "actions":[  
        {  
            "taskId":"_SELECTOR-dmvaCreateTask-2",
            "key":"dmvaCreateTask TimeDate Missing",
            "facets":[  
                {  
                    "name":"tts",
                    "value":"When would you like to be reminded?"
                },
                {  
                    "name":"text",
                    "value":"When would you like to be reminded?"
                }
            ]
        }
    ],
    "tasks":[  
        {  
            "id":"_SELECTOR-dmvaCreateTask-2",
            "state":"active",
            "concepts":[  
                {  
                    "name":"TASK_DESCRIPTION",
                    "values":[  
                        {  
                            "literal":"check the patient's vitals",
                            "value":"check the patient's vitals"
                        }
                    ]
                },
                {  
                    "name":"TASK_DATE"
                }
            ],
            "intent":"dmvaCreateTask"
        }
    ],
    "literal":"Remind me to check the patient's vitals"
    "nluSessionId":"â€œabcd3460-797a-4416-90d7-f98a4edf0321"
}</pre>
        </p>
        <p>The user then replies to the <a href="../iOSUseCases/DANUBE_TTS_IOS.htm">TTS</a> prompt by saying <span class="command">at noon</span>. The dialog result is the following:</p>
        <p><pre class="example">
{  
    "actions":[  
        {  
            "taskId":"_SELECTOR-dmvaCreateTask-2",
            "key":"dmvaCreateTask Complete",
            "facets":[  
                {  
                    "name":"tts",
                    "value":""
                },
                {  
                    "name":"text",
                    "value":""
                }
            ]
        }
    ],
    "tasks":[  
        {  
            "id":"_SELECTOR-dmvaCreateTask-2",
            "state":"finished",
            "concepts":[  
                {  
                    "name":"TASK_DESCRIPTION",
                    "values":[  
                        {  
                            "literal":"check the patient's vitals",
                            "value":"check the patient's vitals"
                        }
                    ]
                },
                {  
                    "name":"TASK_DATE",
                    "concepts":[  
                        {  
                            "name":"nuance_CALENDAR",
                            "concepts":[  
                                {  
                                    "name":"nuance_TIME",
                                    "concepts":[  
                                        {  
                                            "name":"nuance_TIME_ABS",
                                            "concepts":[  
                                                {  
                                                    "name":"nuance_HOUR",
                                                    "values":[  
                                                        {  
                                                            "value":"12"
                                                        }
                                                    ]
                                                },
                                                {  
                                                    "name":"nuance_AMPM",
                                                    "values":[  
                                                        {  
                                                            "value":"pm"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                 }
            ],
            "intent":"dmvaCreateTask"
        }
    ],
    "literal":"At noon"
    "nluSessionId":"b42c3460-797a-4416-90d7-f98a4edf0101"
}</pre>
        </p>
        <h2>Remarks</h2>
        <ul>
            <li>If <span class="mc-variable DocLoc.DMVA_Short variable">DMVA</span> is enabled and no speech is detected for four seconds, the app switches from assistant mode to <a href="../Concepts/DANUBE_MODES.htm">standby mode</a>.</li>
            <li>When the user receives a <a href="../iOSUseCases/DANUBE_TTS_IOS.htm">TTS</a> prompt during a dialog, <span class="mc-variable DocLoc.DM_SK variable">Dragon Medical SpeechKit</span> will switch from assistant mode to standby mode if no speech is detected for 30 seconds.</li>
            <li>When the app exits assistant mode, any active dialog is canceled.</li>
        </ul>
    </body>
</html>